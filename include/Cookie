/**
  * (C) LGPL-3
  *
  * Tasteful Server <https://github.com/scheibel/tasteful-server>
  *
  * Copyright: 2012 Lux, Scheibel
  * Authors:
  *     Roland Lux <rollux2000@googlemail.com>
  *     Willy Scheibel <willyscheibel@gmx.de>
  * 
  * This file is part of Tasteful Server.
  *
  * Tasteful Server is free software: you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  * 
  * Tasteful Server is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.
  * 
  * You should have received a copy of the GNU Lesser General Public License
  * along with Tasteful Server.  If not, see <http://www.gnu.org/licenses/>.
  **/

#pragma once

#include <QString>
#include <QHash>
#include <QTextStream>
#include <httpUtil>

class Cookie {
	public:
		static const QString MaxAge;
		static const QString Comment;
		static const QString Domain;
		static const QString Path;
		static const QString Version;
		static const QString Expires;
		static const QString Secure;
		static const QString HttpOnly;
	public:
		Cookie();
		Cookie(QString name, QString value);
	
		QString getName();
		QString getValue();
	
		Cookie& setValue(QString value);
		Cookie& setMaxAge(unsigned seconds);
		Cookie& setComment(QString comment);
		Cookie& setDomain(QString domain);
		Cookie& setPath(QString path);
		Cookie& setVersion(QString version);
		Cookie& setExpires(const QDateTime& dateTime);
		Cookie& setExpires(QString expires);
		Cookie& setSecure(bool secure);
		Cookie& setHttpOnly(bool httpOnly);
	
		QString toString();
	private:
		QString name;
		QString value;
		bool secure;
		bool httpOnly;
		QHash<QString, QString> attributes;
};

class Cookies {
	public:	
		bool isEmpty();
	
		void set(Cookie cookie);
		bool has(const QString& name);
		Cookie get(const QString& name);
		Cookie& operator[](const QString& name);
		void clear(Cookie& cookie);
	
		QHash<QString, Cookie>::iterator begin();
		QHash<QString, Cookie>::iterator end();
	
		void parse(const QString& cookiesString);
	
		static Cookies fromString(const QString& cookiesString);
	private:
		QHash<QString, Cookie> cookies;
};
