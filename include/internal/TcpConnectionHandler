/**
  * (C) LGPL-3
  *
  * Tasteful Server <https://github.com/scheibel/tasteful-server>
  *
  * Copyright: 2012 Lux, Scheibel
  * Authors:
  *     Roland Lux <rollux2000@googlemail.com>
  *     Willy Scheibel <willyscheibel@gmx.de>
  * 
  * This file is part of Tasteful Server.
  *
  * Tasteful Server is free software: you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  * 
  * Tasteful Server is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.
  * 
  * You should have received a copy of the GNU Lesser General Public License
  * along with Tasteful Server.  If not, see <http://www.gnu.org/licenses/>.
  **/

#pragma once

#include <QObject>
#include <QTcpSocket>
#include <TcpDataHandler>
#include <internal/ThreadPool>
#include <QSslSocket>
#include <QSslCertificate>
#include <QSslKey>

namespace internal {
	
class TcpConnectionHandler : public Task {
	Q_OBJECT;
	public:
		TcpConnectionHandler(unsigned socketDescriptor, TcpDataHandler* handler);
		~TcpConnectionHandler();
	
		void startUp();
	private slots:
		void disconnected();
		void readyRead();
		void writeData(QByteArray data);
		void error(QAbstractSocket::SocketError e);
		void disconnect();
	protected:
		unsigned socketDescriptor;
		QTcpSocket* socket;
		TcpDataHandler* handler;
	
		virtual QTcpSocket* createSocket();
};

class SslConnectionHandler : public TcpConnectionHandler {
	public:
		SslConnectionHandler(unsigned socketDescriptor, QSslCertificate certificate, QSslKey privateKey, TcpDataHandler* handler);
	protected:
		QSslCertificate certificate;
		QSslKey privateKey;
	
		QTcpSocket* createSocket();
};

}

