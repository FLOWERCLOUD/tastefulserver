/**
  * (C) LGPL-3
  *
  * Tasteful Server
  *
  * Copyright: 2012 Lux, Scheibel
  * Authors:
  *     Roland Lux <rollux2000@googlemail.com>
  *     Willy Scheibel <willyscheibel@gmx.de>
  * 
  * This file is part of Tasteful Server.
  *
  * Tasteful Server is free software: you can redistribute it and/or modify
  * it under the terms of the GNU Lesser General Public License as published by
  * the Free Software Foundation, either version 3 of the License, or
  * (at your option) any later version.
  * 
  * Tasteful Server is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Lesser General Public License for more details.
  * 
  * You should have received a copy of the GNU Lesser General Public License
  * along with Tasteful Server.  If not, see <http://www.gnu.org/licenses/>.
  **/

#pragma once

#include <QString>
#include <QByteArray>
#include <QList>
#include <QHash>
#include <HttpHeader>
#include <QTextStream>

namespace http {
	const QString Linebreak = "\r\n";
}

class HttpEntity {
	public:
		HttpEntity();
	
		bool hasHeader(http::HeaderName headerName);
		HttpHeader getHeader(http::HeaderName headerName);
		QList<HttpHeader> getHeaders(http::HeaderName headerName);
	
		void addHeader(HttpHeader header);
		void addHeaders(QList<HttpHeader> headers);
	
		void setHeader(HttpHeader header, bool merge=false);
		void setHeader(http::HeaderName headerName, QString value, bool merge=false);
	
		void removeHeader(http::HeaderName headerName);
	
		void setContent(QByteArray content);
		QByteArray getContent();
		void clearContent();
	
		virtual QByteArray toByteArray();
	protected:
		QHash<QString, QList<HttpHeader>> headers;
		QByteArray content;
	
		void writeHeaderOn(HttpHeader& header, QTextStream& stream);
		virtual void writeHeadersOn(QTextStream& stream);
};
