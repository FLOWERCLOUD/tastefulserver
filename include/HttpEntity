#pragma once

#include <QString>
#include <QByteArray>
#include <QList>
#include <QHash>
#include <HttpHeader>
#include <QTextStream>

namespace http {
	const QString Linebreak = "\r\n";
}

class HttpEntity {
	public:
		HttpEntity();
	
		bool hasHeader(http::HeaderName headerName);
		HttpHeader getHeader(http::HeaderName headerName);
		QList<HttpHeader> getHeaders(http::HeaderName headerName);
	
		void addHeader(HttpHeader header);
		void addHeaders(QList<HttpHeader> headers);
	
		void setHeader(HttpHeader header, bool merge=false);
		void setHeader(http::HeaderName headerName, QString value, bool merge=false);
	
		void removeHeader(http::HeaderName headerName);
	
		void setContent(QByteArray content);
		QByteArray getContent();
		void clearContent();
	
		virtual QByteArray toByteArray();
	protected:
		QHash<QString, QList<HttpHeader>> headers;
		QByteArray content;
	
		void writeHeaderOn(HttpHeader& header, QTextStream& stream);
		virtual void writeHeadersOn(QTextStream& stream);
};
